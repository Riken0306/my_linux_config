#    ______                 __  _
#   / ____/_  ______  _____/ /_(_)___  ____  _____
#  / /_  / / / / __ \/ ___/ __/ / __ \/ __ \/ ___/
# / __/ / /_/ / / / / /__/ /_/ / /_/ / / / (__  )
#/_/    \____/_/ /_/\___/\__/_/\____/_/ /_/____/

# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}

function fzf-ps () {
  (date; ps -ef) |
    fzf --bind='ctrl-r:reload(date; ps -ef)' \
        --header=$'Press CTRL-R to reload\n\n' --header-lines=2 \
        --preview='echo {}' --preview-window=down,3,wrap \
        --layout=reverse --height=80% | awk '{print $2}' | xargs kill -9
}

# Using fzf to select apt packages to install or search
function aptinstall () {
	packages=$(sed 's/\n/ /g' <<< $(apt-cache pkgnames | fzf -m --preview 'apt show {1}'))
	if [ ! -z "$packages" ]; then
	    set -x && sudo apt install $(echo $packages)
	fi
}

# Yazi File-Manager
function y () {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    # Prompt the user to decide whether to change the directory
    echo -n "Change directory to '$cwd'? [y/N]: "
    read -r response
    if [[ "$response" =~ ^[Yy]$ ]]; then
      builtin cd -- "$cwd"
    else
      echo "Staying in the current directory: $PWD"
    fi
  fi
  rm -f -- "$tmp"
}

function tldr_current_command() {
  if [[ -n $BUFFER ]]; then
    # Extract the first word from the buffer
    local cmd=${BUFFER%% *}
    # Run tldr for the command
    tldr $cmd
    # Bring the buffer back
    zle redisplay
  else
  fi
}
zle -N tldr_current_command

function fzf-zellij() {
    if [ "$1" = "a" ]; then
        # Get the list of existing zellij sessions
        local sessions
        sessions=$(zellij list-sessions | awk '{print $1}' | sed -r 's/\x1B\[[0-9;]*[mK]//g' )

        # Use fzf to select a session
        local selected_session
        selected_session=$(echo "$sessions" | fzf --height=40% --layout=reverse  --print-query | tail -n 1)

        # Check if the selected session exists
        if echo "$sessions" | grep -q "^$selected_session$"; then
            echo "Attaching to existing session: $selected_session"
            zellij attach "$selected_session"
        elif [ -n "$selected_session" ]
        then
            echo "Creating and attaching to new session: $selected_session"
            zellij -s "$selected_session"
        fi
    else
        zellij
    fi
}
